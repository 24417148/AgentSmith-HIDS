{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0","program":"C:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","lru_time_cache","C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=1a979ea377de80e5","-C","extra-filename=-1a979ea377de80e5","--out-dir","e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","-L","dependency=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\danie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\liblru_time_cache-1a979ea377de80e5.rmeta"},"prelude":{"crate_id":{"name":"lru_time_cache","disambiguator":[14776975597850169281,4830738847232396052]},"crate_root":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src","external_crates":[{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":507,"byte_end":33850,"line_start":10,"line_end":1066,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":507,"byte_end":33850,"line_start":10,"line_end":1066,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":48},{"krate":0,"index":53},{"krate":0,"index":59},{"krate":0,"index":71},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":91},{"krate":0,"index":99},{"krate":0,"index":106},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":167},{"krate":0,"index":171}],"decl_id":null,"docs":" # Least Recently Used (LRU) Cache","sig":null,"attributes":[{"value":"forbid(bad_style, exceeding_bitshifts, mutable_transmutes,\n         no_mangle_const_items, unknown_crate_types, warnings)","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":1917,"byte_end":2059,"line_start":44,"line_end":51,"column_start":1,"column_end":3}},{"value":"deny(deprecated, improper_ctypes, missing_docs,\n       non_shorthand_field_patterns, overflowing_literals, plugin_as_library,\n       stable_features, unconditional_recursion, unknown_lints, unsafe_code,\n       unused, unused_allocation, unused_attributes, unused_comparisons,\n       unused_features, unused_parens, while_true)","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":2060,"byte_end":2432,"line_start":52,"line_end":70,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\n       unused_import_braces, unused_qualifications, unused_results)","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":2433,"byte_end":2588,"line_start":71,"line_end":78,"column_start":1,"column_end":3}},{"value":"allow(box_pointers, missing_copy_implementations,\n        missing_debug_implementations, variant_size_differences)","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":2589,"byte_end":2717,"line_start":79,"line_end":84,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3126,"byte_end":3132,"line_start":98,"line_end":98,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, Key, Value>)","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" A vacant Entry\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3193,"byte_end":3201,"line_start":100,"line_end":100,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, Value>)","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" An occupied Entry\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3067,"byte_end":3072,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entry","value":"Entry::{Vacant, Occupied}","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":27}],"decl_id":null,"docs":" A view into a single entry in an LRU cache, which may either be vacant or occupied.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3263,"byte_end":3274,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A vacant Entry.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3385,"byte_end":3398,"line_start":110,"line_end":110,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":39}],"decl_id":null,"docs":" An occupied Entry.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3607,"byte_end":3611,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that updates the timestamps as values are traversed.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":5634,"byte_end":5639,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Valid","qualname":"::TimedEntry::Valid","value":"TimedEntry::Valid(&'a Key, &'a Value)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Entry has not yet expired.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":5723,"byte_end":5730,"line_start":181,"line_end":181,"column_start":5,"column_end":12},"name":"Expired","qualname":"::TimedEntry::Expired","value":"TimedEntry::Expired(Key, Value)","parent":{"krate":0,"index":59},"children":[],"decl_id":null,"docs":" Entry got expired and was evicted from the cache.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":5558,"byte_end":5568,"line_start":177,"line_end":177,"column_start":10,"column_end":20},"name":"TimedEntry","qualname":"::TimedEntry","value":"TimedEntry::{Valid, Expired}","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":67}],"decl_id":null,"docs":" Entry produced by `NotifyIter` that might be still valid or expired.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":5853,"byte_end":5863,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"NotifyIter","qualname":"::NotifyIter","value":"NotifyIter {  }","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Much like `Iter` except will produce expired entries too where `Iter` silently drops them.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":7384,"byte_end":7392,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"PeekIter","qualname":"::PeekIter","value":"PeekIter {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" An iterator over an `LruCache`'s entries that does not modify the timestamp.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":8116,"byte_end":8124,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"LruCache","qualname":"::LruCache","value":"LruCache {  }","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Implementation of [LRU cache](index.html#least-recently-used-lru-cache).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":8396,"byte_end":8409,"line_start":265,"line_end":265,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LruCache<Key, Value>>::with_capacity","value":"fn (capacity: usize) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for capacity based `LruCache`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":8688,"byte_end":8708,"line_start":275,"line_end":275,"column_start":12,"column_end":32},"name":"with_expiry_duration","qualname":"<LruCache<Key, Value>>::with_expiry_duration","value":"fn (time_to_live: Duration) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for time based `LruCache`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":9028,"byte_end":9061,"line_start":285,"line_end":285,"column_start":12,"column_end":45},"name":"with_expiry_duration_and_capacity","qualname":"<LruCache<Key, Value>>::with_expiry_duration_and_capacity","value":"fn (time_to_live: Duration, capacity: usize) -> LruCache<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Constructor for dual-feature capacity and time based `LruCache`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":9640,"byte_end":9653,"line_start":302,"line_end":302,"column_start":12,"column_end":25},"name":"notify_insert","qualname":"<LruCache<Key, Value>>::notify_insert","value":"fn (&mut self, key: Key, value: Value) -> (Option<Value>, Vec<(Key, Value)>)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":10387,"byte_end":10393,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"insert","qualname":"<LruCache<Key, Value>>::insert","value":"fn (&mut self, key: Key, value: Value) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the cache.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":10556,"byte_end":10562,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"name":"remove","qualname":"<LruCache<Key, Value>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" Removes a key-value pair from the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":10981,"byte_end":10986,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"clear","qualname":"<LruCache<Key, Value>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the `LruCache`, removing all values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":11142,"byte_end":11152,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"notify_get","qualname":"<LruCache<Key, Value>>::notify_get","value":"fn <Q> (&mut self, key: &Q) -> (Option<&Value>, Vec<(Key, Value)>)","parent":null,"children":[],"decl_id":null,"docs":" Much like `get()`, except in addition returns expired entries.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":11551,"byte_end":11554,"line_start":362,"line_end":362,"column_start":12,"column_end":15},"name":"get","qualname":"<LruCache<Key, Value>>::get","value":"fn <Q> (&mut self, key: &Q) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a reference to the value stored under `key`, or `None` if the key doesn't exist.\n Also removes expired elements and updates the time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":11848,"byte_end":11852,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"peek","qualname":"<LruCache<Key, Value>>::peek","value":"fn <Q> (&self, key: &Q) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value with the given `key`, if present and not expired, without\n updating the timestamp.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":12392,"byte_end":12406,"line_start":389,"line_end":389,"column_start":12,"column_end":26},"name":"notify_get_mut","qualname":"<LruCache<Key, Value>>::notify_get_mut","value":"fn <Q> (&mut self, key: &Q) -> (Option<&mut Value>, Vec<(Key, Value)>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist. Also removes expired elements and updates the time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":13028,"byte_end":13035,"line_start":409,"line_end":409,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<LruCache<Key, Value>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the value stored under `key`, or `None` if the key doesn't\n exist.  Also removes expired elements and updates the time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":13256,"byte_end":13268,"line_start":418,"line_end":418,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<LruCache<Key, Value>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether `key` exists in the cache or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":13505,"byte_end":13508,"line_start":427,"line_end":427,"column_start":12,"column_end":15},"name":"len","qualname":"<LruCache<Key, Value>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the cache, i.e. the number of cached non-expired key-value pairs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":14181,"byte_end":14189,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LruCache<Key, Value>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no non-expired entries in the cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":14549,"byte_end":14554,"line_start":452,"line_end":452,"column_start":12,"column_end":17},"name":"entry","qualname":"<LruCache<Key, Value>>::entry","value":"fn (&mut self, key: Key) -> Entry<'_, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":15479,"byte_end":15490,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"notify_iter","qualname":"<LruCache<Key, Value>>::notify_iter","value":"fn (&mut self) -> NotifyIter<'_, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":15963,"byte_end":15967,"line_start":485,"line_end":485,"column_start":12,"column_end":16},"name":"iter","qualname":"<LruCache<Key, Value>>::iter","value":"fn (&mut self) -> Iter<'_, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that updates the timestamps as values are\n traversed. Also removes expired elements before creating the iterator.\n Values are produced in the most recently used order.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":16323,"byte_end":16332,"line_start":497,"line_end":497,"column_start":12,"column_end":21},"name":"peek_iter","qualname":"<LruCache<Key, Value>>::peek_iter","value":"fn (&self) -> PeekIter<'_, Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all entries that does not modify the timestamps.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18403,"byte_end":18409,"line_start":568,"line_end":568,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18700,"byte_end":18708,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to its value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18973,"byte_end":18982,"line_start":584,"line_end":584,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: Value) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":19353,"byte_end":19367,"line_start":593,"line_end":593,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, default: F) -> &'a mut Value","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3971,"byte_end":3975,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":4734,"byte_end":4738,"line_start":151,"line_end":151,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":6236,"byte_end":6246,"line_start":195,"line_end":195,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":7543,"byte_end":7551,"line_start":234,"line_end":234,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":8283,"byte_end":8291,"line_start":260,"line_end":260,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18003,"byte_end":18011,"line_start":551,"line_end":551,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18338,"byte_end":18349,"line_start":566,"line_end":566,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18596,"byte_end":18609,"line_start":574,"line_end":574,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18796,"byte_end":18801,"line_start":581,"line_end":581,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":3971,"byte_end":3975,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":40},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":4734,"byte_end":4738,"line_start":151,"line_end":151,"column_start":35,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":6236,"byte_end":6246,"line_start":195,"line_end":195,"column_start":35,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":71},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":7543,"byte_end":7551,"line_start":234,"line_end":234,"column_start":35,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":8283,"byte_end":8291,"line_start":260,"line_end":260,"column_start":18,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18003,"byte_end":18011,"line_start":551,"line_end":551,"column_start":28,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":99},"to":{"krate":2,"index":2179}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18338,"byte_end":18349,"line_start":566,"line_end":566,"column_start":35,"column_end":46},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18596,"byte_end":18609,"line_start":574,"line_end":574,"column_start":17,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":36},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\lru_time_cache-0.9.0\\src\\lib.rs","byte_start":18796,"byte_end":18801,"line_start":581,"line_end":581,"column_start":35,"column_end":40},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}}]}