{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0","program":"C:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ipnet","C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=b73e5bfa319b7e0e","-C","extra-filename=-b73e5bfa319b7e0e","--out-dir","e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","-L","dependency=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\danie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\libipnet-b73e5bfa319b7e0e.rmeta"},"prelude":{"crate_id":{"name":"ipnet","disambiguator":[17581924178574724146,9114738294543645748]},"crate_root":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src","external_crates":[{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}}],"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":0,"byte_end":4073,"line_start":1,"line_end":93,"column_start":1,"column_end":17}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3780,"byte_end":3785,"line_start":85,"line_end":85,"column_start":23,"column_end":28},"alias_span":null,"name":"IpAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3787,"byte_end":3792,"line_start":85,"line_end":85,"column_start":30,"column_end":35},"alias_span":null,"name":"IpSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3794,"byte_end":3802,"line_start":85,"line_end":85,"column_start":37,"column_end":45},"alias_span":null,"name":"IpBitAnd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3804,"byte_end":3811,"line_start":85,"line_end":85,"column_start":47,"column_end":54},"alias_span":null,"name":"IpBitOr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3813,"byte_end":3824,"line_start":85,"line_end":85,"column_start":56,"column_end":67},"alias_span":null,"name":"IpAddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3826,"byte_end":3839,"line_start":85,"line_end":85,"column_start":69,"column_end":82},"alias_span":null,"name":"Ipv4AddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3841,"byte_end":3854,"line_start":85,"line_end":85,"column_start":84,"column_end":97},"alias_span":null,"name":"Ipv6AddrRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3879,"byte_end":3884,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"alias_span":null,"name":"IpNet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3886,"byte_end":3893,"line_start":86,"line_end":86,"column_start":30,"column_end":37},"alias_span":null,"name":"Ipv4Net","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3895,"byte_end":3902,"line_start":86,"line_end":86,"column_start":39,"column_end":46},"alias_span":null,"name":"Ipv6Net","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3904,"byte_end":3918,"line_start":86,"line_end":86,"column_start":48,"column_end":62},"alias_span":null,"name":"PrefixLenError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3920,"byte_end":3929,"line_start":86,"line_end":86,"column_start":64,"column_end":73},"alias_span":null,"name":"IpSubnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3931,"byte_end":3942,"line_start":86,"line_end":86,"column_start":75,"column_end":86},"alias_span":null,"name":"Ipv4Subnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3944,"byte_end":3955,"line_start":86,"line_end":86,"column_start":88,"column_end":99},"alias_span":null,"name":"Ipv6Subnets","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":3980,"byte_end":3994,"line_start":87,"line_end":87,"column_start":23,"column_end":37},"alias_span":null,"name":"AddrParseError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","byte_start":0,"byte_end":4073,"line_start":1,"line_end":93,"column_start":1,"column_end":17},"name":"","qualname":"::","value":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":125},{"krate":0,"index":287}],"decl_id":null,"docs":" Types for IPv4 and IPv6 network addresses.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":5591,"byte_end":5596,"line_start":42,"line_end":42,"column_start":11,"column_end":16},"name":"IpAdd","qualname":"::ipext::IpAdd","value":"IpAdd<RHS = Self>","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"decl_id":null,"docs":" Provides a `saturating_add()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":5620,"byte_end":5626,"line_start":43,"line_end":43,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpAdd::Output","value":"type Output;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":5635,"byte_end":5649,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ipext::IpAdd::saturating_add","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7014,"byte_end":7019,"line_start":82,"line_end":82,"column_start":11,"column_end":16},"name":"IpSub","qualname":"::ipext::IpSub","value":"IpSub<RHS = Self>","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"decl_id":null,"docs":" Provides a `saturating_sub()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7043,"byte_end":7049,"line_start":83,"line_end":83,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpSub::Output","value":"type Output;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7058,"byte_end":7072,"line_start":84,"line_end":84,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ipext::IpSub::saturating_sub","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7830,"byte_end":7838,"line_start":109,"line_end":109,"column_start":11,"column_end":19},"name":"IpBitAnd","qualname":"::ipext::IpBitAnd","value":"IpBitAnd<RHS = Self>","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"decl_id":null,"docs":" Provides a `bitand()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7862,"byte_end":7868,"line_start":110,"line_end":110,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpBitAnd::Output","value":"type Output;","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":7877,"byte_end":7883,"line_start":111,"line_end":111,"column_start":8,"column_end":14},"name":"bitand","qualname":"::ipext::IpBitAnd::bitand","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":49},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":8618,"byte_end":8625,"line_start":136,"line_end":136,"column_start":11,"column_end":18},"name":"IpBitOr","qualname":"::ipext::IpBitOr","value":"IpBitOr<RHS = Self>","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56}],"decl_id":null,"docs":" Provides a `bitor()` method for `Ipv4Addr` and `Ipv6Addr`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":8649,"byte_end":8655,"line_start":137,"line_end":137,"column_start":10,"column_end":16},"name":"Output","qualname":"::ipext::IpBitOr::Output","value":"type Output;","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":8664,"byte_end":8669,"line_start":138,"line_end":138,"column_start":8,"column_end":13},"name":"bitor","qualname":"::ipext::IpBitOr::bitor","value":"fn (self, rhs: RHS) -> Self::Output","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":425},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":12621,"byte_end":12623,"line_start":284,"line_end":284,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipext::IpAddrRange::V4","value":"IpAddrRange::V4(Ipv4AddrRange)","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":428},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":12644,"byte_end":12646,"line_start":285,"line_end":285,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipext::IpAddrRange::V6","value":"IpAddrRange::V6(Ipv6AddrRange)","parent":{"krate":0,"index":424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":12603,"byte_end":12614,"line_start":283,"line_end":283,"column_start":10,"column_end":21},"name":"IpAddrRange","qualname":"::ipext::IpAddrRange","value":"IpAddrRange::{V4, V6}","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":428}],"decl_id":null,"docs":" An `Iterator` over a range of IP addresses, either IPv4 or IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":13240,"byte_end":13253,"line_start":309,"line_end":309,"column_start":12,"column_end":25},"name":"Ipv4AddrRange","qualname":"::ipext::Ipv4AddrRange","value":"Ipv4AddrRange {  }","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" An `Iterator` over a range of IPv4 addresses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":13865,"byte_end":13878,"line_start":335,"line_end":335,"column_start":12,"column_end":25},"name":"Ipv6AddrRange","qualname":"::ipext::Ipv6AddrRange","value":"Ipv6AddrRange {  }","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482}],"decl_id":null,"docs":" An `Iterator` over a range of IPv6 addresses.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14208,"byte_end":14211,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4AddrRange>::new","value":"fn (start: Ipv4Addr, end: Ipv4Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14829,"byte_end":14832,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6AddrRange>::new","value":"fn (start: Ipv6Addr, end: Ipv6Addr) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":36273,"byte_end":36275,"line_start":44,"line_end":44,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipnet::IpNet::V4","value":"IpNet::V4(Ipv4Net)","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":36290,"byte_end":36292,"line_start":45,"line_end":45,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipnet::IpNet::V6","value":"IpNet::V6(Ipv6Net)","parent":{"krate":0,"index":508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":36261,"byte_end":36266,"line_start":43,"line_end":43,"column_start":10,"column_end":15},"name":"IpNet","qualname":"::ipnet::IpNet","value":"IpNet::{V4, V6}","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":512}],"decl_id":null,"docs":" An IP network address, either IPv4 or IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":37063,"byte_end":37070,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Ipv4Net","qualname":"::ipnet::Ipv4Net","value":"Ipv4Net {  }","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" An IPv4 network address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":37869,"byte_end":37876,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"Ipv6Net","qualname":"::ipnet::Ipv6Net","value":"Ipv6Net {  }","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562}],"decl_id":null,"docs":" An IPv6 network address.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38115,"byte_end":38129,"line_start":112,"line_end":112,"column_start":12,"column_end":26},"name":"PrefixLenError","qualname":"::ipnet::PrefixLenError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error which can be returned when the prefix length is invalid.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38900,"byte_end":38905,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"trunc","qualname":"<IpNet>::trunc","value":"fn (&self) -> IpNet","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":39111,"byte_end":39115,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"addr","qualname":"<IpNet>::addr","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":39324,"byte_end":39334,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<IpNet>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":39545,"byte_end":39559,"line_start":169,"line_end":169,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<IpNet>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":40138,"byte_end":40145,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"netmask","qualname":"<IpNet>::netmask","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":40757,"byte_end":40765,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<IpNet>::hostmask","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":41380,"byte_end":41387,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"network","qualname":"<IpNet>::network","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":42036,"byte_end":42045,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<IpNet>::broadcast","value":"fn (&self) -> IpAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":42937,"byte_end":42945,"line_start":281,"line_end":281,"column_start":12,"column_end":20},"name":"supernet","qualname":"<IpNet>::supernet","value":"fn (&self) -> Option<IpNet>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `IpNet` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":43916,"byte_end":43926,"line_start":309,"line_end":309,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<IpNet>::is_sibling","value":"fn (&self, other: &IpNet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":45144,"byte_end":45149,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"name":"hosts","qualname":"<IpNet>::hosts","value":"fn (&self) -> IpAddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":46729,"byte_end":46736,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"subnets","qualname":"<IpNet>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<IpSubnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":48462,"byte_end":48470,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpNet>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":49333,"byte_end":49342,"line_start":462,"line_end":462,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<IpNet>::aggregate","value":"fn (networks: &Vec<IpNet>) -> Vec<IpNet>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `IpNet`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":51596,"byte_end":51599,"line_start":543,"line_end":543,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Net>::new","value":"fn (ip: Ipv4Addr, prefix_len: u8) -> Result<Ipv4Net, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv4 network address from an `Ipv4Addr` and prefix\n length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":52160,"byte_end":52165,"line_start":563,"line_end":563,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Ipv4Net>::trunc","value":"fn (&self) -> Ipv4Net","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":52296,"byte_end":52300,"line_start":568,"line_end":568,"column_start":12,"column_end":16},"name":"addr","qualname":"<Ipv4Net>::addr","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":52393,"byte_end":52403,"line_start":573,"line_end":573,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<Ipv4Net>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":52510,"byte_end":52524,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<Ipv4Net>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":52863,"byte_end":52870,"line_start":593,"line_end":593,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv4Net>::netmask","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":53359,"byte_end":53367,"line_start":612,"line_end":612,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<Ipv4Net>::hostmask","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":53864,"byte_end":53871,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv4Net>::network","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":54275,"byte_end":54284,"line_start":646,"line_end":646,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv4Net>::broadcast","value":"fn (&self) -> Ipv4Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the broadcast address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":54820,"byte_end":54828,"line_start":664,"line_end":664,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv4Net>::supernet","value":"fn (&self) -> Option<Ipv4Net>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Ipv4Net` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":55425,"byte_end":55435,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<Ipv4Net>::is_sibling","value":"fn (&self, other: &Ipv4Net) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":56486,"byte_end":56491,"line_start":713,"line_end":713,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv4Net>::hosts","value":"fn (&self) -> Ipv4AddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":57954,"byte_end":57961,"line_start":755,"line_end":755,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv4Net>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<Ipv4Subnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":59060,"byte_end":59068,"line_start":788,"line_end":788,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv4Net>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":59932,"byte_end":59941,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<Ipv4Net>::aggregate","value":"fn (networks: &Vec<Ipv4Net>) -> Vec<Ipv4Net>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `Ipv4Net`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":61469,"byte_end":61472,"line_start":874,"line_end":874,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Net>::new","value":"fn (ip: Ipv6Addr, prefix_len: u8) -> Result<Ipv6Net, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IPv6 network address from an `Ipv6Addr` and prefix\n length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":62029,"byte_end":62034,"line_start":894,"line_end":894,"column_start":12,"column_end":17},"name":"trunc","qualname":"<Ipv6Net>::trunc","value":"fn (&self) -> Ipv6Net","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the\n prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":62169,"byte_end":62173,"line_start":899,"line_end":899,"column_start":12,"column_end":16},"name":"addr","qualname":"<Ipv6Net>::addr","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":62266,"byte_end":62276,"line_start":904,"line_end":904,"column_start":12,"column_end":22},"name":"prefix_len","qualname":"<Ipv6Net>::prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":62387,"byte_end":62401,"line_start":909,"line_end":909,"column_start":12,"column_end":26},"name":"max_prefix_len","qualname":"<Ipv6Net>::max_prefix_len","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum valid prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":62733,"byte_end":62740,"line_start":924,"line_end":924,"column_start":12,"column_end":19},"name":"netmask","qualname":"<Ipv6Net>::netmask","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":63265,"byte_end":63273,"line_start":943,"line_end":943,"column_start":12,"column_end":20},"name":"hostmask","qualname":"<Ipv6Net>::hostmask","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the host mask.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":63784,"byte_end":63791,"line_start":962,"line_end":962,"column_start":12,"column_end":19},"name":"network","qualname":"<Ipv6Net>::network","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the network address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":64370,"byte_end":64379,"line_start":980,"line_end":980,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<Ipv6Net>::broadcast","value":"fn (&self) -> Ipv6Addr","parent":null,"children":[],"decl_id":null,"docs":" Returns the last address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":64946,"byte_end":64954,"line_start":999,"line_end":999,"column_start":12,"column_end":20},"name":"supernet","qualname":"<Ipv6Net>::supernet","value":"fn (&self) -> Option<Ipv6Net>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Ipv6Net` that contains this one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":65555,"byte_end":65565,"line_start":1018,"line_end":1018,"column_start":12,"column_end":22},"name":"is_sibling","qualname":"<Ipv6Net>::is_sibling","value":"fn (&self, other: &Ipv6Net) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this network and the given network are \n children of the same supernet.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":66258,"byte_end":66263,"line_start":1040,"line_end":1040,"column_start":12,"column_end":17},"name":"hosts","qualname":"<Ipv6Net>::hosts","value":"fn (&self) -> Ipv6AddrRange","parent":null,"children":[],"decl_id":null,"docs":" Return an `Iterator` over the host addresses in this network.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":67516,"byte_end":67523,"line_start":1074,"line_end":1074,"column_start":12,"column_end":19},"name":"subnets","qualname":"<Ipv6Net>::subnets","value":"fn (&self, new_prefix_len: u8) -> Result<Ipv6Subnets, PrefixLenError>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Iterator` over the subnets of this network with the\n given prefix length.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":68599,"byte_end":68607,"line_start":1107,"line_end":1107,"column_start":12,"column_end":20},"name":"contains","qualname":"<Ipv6Net>::contains","value":"fn <T> (&self, other: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if a network address contains either another network\n address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":69485,"byte_end":69494,"line_start":1137,"line_end":1137,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<Ipv6Net>::aggregate","value":"fn (networks: &Vec<Ipv6Net>) -> Vec<Ipv6Net>","parent":null,"children":[],"decl_id":null,"docs":" Aggregate a `Vec` of `Ipv6Net`s and return the result as a new\n `Vec`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":71664,"byte_end":71672,"line_start":1211,"line_end":1211,"column_start":11,"column_end":19},"name":"Contains","qualname":"::ipnet::Contains","value":"Contains<T>","parent":null,"children":[{"krate":0,"index":244}],"decl_id":null,"docs":" Provides a method to test if a network address contains either\n another network address or an IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":71685,"byte_end":71693,"line_start":1212,"line_end":1212,"column_start":8,"column_end":16},"name":"contains","qualname":"::ipnet::Contains::contains","value":"fn (&self, other: T) -> bool","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":74518,"byte_end":74520,"line_start":1303,"line_end":1303,"column_start":5,"column_end":7},"name":"V4","qualname":"::ipnet::IpSubnets::V4","value":"IpSubnets::V4(Ipv4Subnets)","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":74539,"byte_end":74541,"line_start":1304,"line_end":1304,"column_start":5,"column_end":7},"name":"V6","qualname":"::ipnet::IpSubnets::V6","value":"IpSubnets::V6(Ipv6Subnets)","parent":{"krate":0,"index":596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":74502,"byte_end":74511,"line_start":1302,"line_end":1302,"column_start":10,"column_end":19},"name":"IpSubnets","qualname":"::ipnet::IpSubnets","value":"IpSubnets::{V4, V6}","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":600}],"decl_id":null,"docs":" An `Iterator` that generates IP network addresses, either IPv4 or\n IPv6.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":75498,"byte_end":75509,"line_start":1335,"line_end":1335,"column_start":12,"column_end":23},"name":"Ipv4Subnets","qualname":"::ipnet::Ipv4Subnets","value":"Ipv4Subnets {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"decl_id":null,"docs":" An `Iterator` that generates IPv4 network addresses.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76558,"byte_end":76569,"line_start":1369,"line_end":1369,"column_start":12,"column_end":23},"name":"Ipv6Subnets","qualname":"::ipnet::Ipv6Subnets","value":"Ipv6Subnets {  }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660}],"decl_id":null,"docs":" An `Iterator` that generates IPv6 network addresses.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76689,"byte_end":76692,"line_start":1376,"line_end":1376,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv4Subnets>::new","value":"fn (start: Ipv4Addr, end: Ipv4Addr, min_prefix_len: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76918,"byte_end":76921,"line_start":1386,"line_end":1386,"column_start":12,"column_end":15},"name":"new","qualname":"<Ipv6Subnets>::new","value":"fn (start: Ipv6Addr, end: Ipv6Addr, min_prefix_len: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":98618,"byte_end":98632,"line_start":337,"line_end":337,"column_start":12,"column_end":26},"name":"AddrParseError","qualname":"::parser::AddrParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error which can be returned when parsing an IP network address.","sig":null,"attributes":[]}],"impls":[{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":10867,"byte_end":10875,"line_start":220,"line_end":220,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":11236,"byte_end":11244,"line_start":235,"line_end":235,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":13953,"byte_end":13964,"line_start":340,"line_end":340,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14079,"byte_end":14090,"line_start":346,"line_end":346,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14181,"byte_end":14194,"line_start":352,"line_end":352,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14802,"byte_end":14815,"line_start":374,"line_end":374,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":15704,"byte_end":15715,"line_start":402,"line_end":402,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":17201,"byte_end":17214,"line_start":455,"line_end":455,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":19876,"byte_end":19889,"line_start":544,"line_end":544,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":22458,"byte_end":22469,"line_start":633,"line_end":633,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":22985,"byte_end":22998,"line_start":648,"line_end":648,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":23982,"byte_end":23995,"line_start":680,"line_end":680,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25321,"byte_end":25332,"line_start":721,"line_end":721,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25359,"byte_end":25372,"line_start":722,"line_end":722,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25399,"byte_end":25412,"line_start":723,"line_end":723,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38154,"byte_end":38168,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38298,"byte_end":38312,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38400,"byte_end":38405,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50259,"byte_end":50264,"line_start":485,"line_end":485,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50360,"byte_end":50365,"line_start":491,"line_end":491,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50497,"byte_end":50502,"line_start":497,"line_end":497,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50718,"byte_end":50723,"line_start":506,"line_end":506,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50818,"byte_end":50823,"line_start":512,"line_end":512,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50917,"byte_end":50922,"line_start":518,"line_end":518,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":51107,"byte_end":51114,"line_start":527,"line_end":527,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60386,"byte_end":60393,"line_start":831,"line_end":831,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60541,"byte_end":60548,"line_start":840,"line_end":840,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60680,"byte_end":60687,"line_start":846,"line_end":846,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60841,"byte_end":60848,"line_start":852,"line_end":852,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60947,"byte_end":60954,"line_start":858,"line_end":858,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":69931,"byte_end":69938,"line_start":1150,"line_end":1150,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70086,"byte_end":70093,"line_start":1159,"line_end":1159,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70225,"byte_end":70232,"line_start":1165,"line_end":1165,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70386,"byte_end":70393,"line_start":1171,"line_end":1171,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":71756,"byte_end":71761,"line_start":1215,"line_end":1215,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72055,"byte_end":72060,"line_start":1225,"line_end":1225,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72358,"byte_end":72365,"line_start":1235,"line_end":1235,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72549,"byte_end":72556,"line_start":1241,"line_end":1241,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72720,"byte_end":72727,"line_start":1247,"line_end":1247,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72911,"byte_end":72918,"line_start":1253,"line_end":1253,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76664,"byte_end":76675,"line_start":1375,"line_end":1375,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76893,"byte_end":76904,"line_start":1385,"line_end":1385,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77144,"byte_end":77153,"line_start":1395,"line_end":1395,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77260,"byte_end":77269,"line_start":1401,"line_end":1401,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77367,"byte_end":77376,"line_start":1407,"line_end":1407,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":78568,"byte_end":78579,"line_start":1436,"line_end":1436,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":79644,"byte_end":79655,"line_start":1465,"line_end":1465,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80725,"byte_end":80734,"line_start":1494,"line_end":1494,"column_start":24,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80761,"byte_end":80772,"line_start":1495,"line_end":1495,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80799,"byte_end":80810,"line_start":1496,"line_end":1496,"column_start":24,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":88401,"byte_end":88407,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":357},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97335,"byte_end":97340,"line_start":295,"line_end":295,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97610,"byte_end":97617,"line_start":305,"line_end":305,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97891,"byte_end":97898,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":98661,"byte_end":98675,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":98805,"byte_end":98819,"line_start":345,"line_end":345,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":10867,"byte_end":10875,"line_start":220,"line_end":220,"column_start":17,"column_end":25},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":6548},"to":{"krate":0,"index":60}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":11236,"byte_end":11244,"line_start":235,"line_end":235,"column_start":17,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":60}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":13953,"byte_end":13964,"line_start":340,"line_end":340,"column_start":30,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14079,"byte_end":14090,"line_start":346,"line_end":346,"column_start":30,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14181,"byte_end":14194,"line_start":352,"line_end":352,"column_start":6,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":14802,"byte_end":14815,"line_start":374,"line_end":374,"column_start":6,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":15704,"byte_end":15715,"line_start":402,"line_end":402,"column_start":19,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":17201,"byte_end":17214,"line_start":455,"line_end":455,"column_start":19,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":19876,"byte_end":19889,"line_start":544,"line_end":544,"column_start":19,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":22458,"byte_end":22469,"line_start":633,"line_end":633,"column_start":30,"column_end":41},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":22985,"byte_end":22998,"line_start":648,"line_end":648,"column_start":30,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":23982,"byte_end":23995,"line_start":680,"line_end":680,"column_start":30,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3767}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25321,"byte_end":25332,"line_start":721,"line_end":721,"column_start":24,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":424},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25359,"byte_end":25372,"line_start":722,"line_end":722,"column_start":24,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipext.rs","byte_start":25399,"byte_end":25412,"line_start":723,"line_end":723,"column_start":24,"column_end":37},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38154,"byte_end":38168,"line_start":114,"line_end":114,"column_start":23,"column_end":37},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":586},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38298,"byte_end":38312,"line_start":120,"line_end":120,"column_start":16,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":586},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":38400,"byte_end":38405,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":508},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50259,"byte_end":50264,"line_start":485,"line_end":485,"column_start":18,"column_end":23},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50360,"byte_end":50365,"line_start":491,"line_end":491,"column_start":21,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50497,"byte_end":50502,"line_start":497,"line_end":497,"column_start":23,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50718,"byte_end":50723,"line_start":506,"line_end":506,"column_start":24,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50818,"byte_end":50823,"line_start":512,"line_end":512,"column_start":24,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":50917,"byte_end":50922,"line_start":518,"line_end":518,"column_start":23,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":51107,"byte_end":51114,"line_start":527,"line_end":527,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60386,"byte_end":60393,"line_start":831,"line_end":831,"column_start":18,"column_end":25},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60541,"byte_end":60548,"line_start":840,"line_end":840,"column_start":21,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60680,"byte_end":60687,"line_start":846,"line_end":846,"column_start":23,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60841,"byte_end":60848,"line_start":852,"line_end":852,"column_start":25,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":60947,"byte_end":60954,"line_start":858,"line_end":858,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":69931,"byte_end":69938,"line_start":1150,"line_end":1150,"column_start":18,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70086,"byte_end":70093,"line_start":1159,"line_end":1159,"column_start":21,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70225,"byte_end":70232,"line_start":1165,"line_end":1165,"column_start":23,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":70386,"byte_end":70393,"line_start":1171,"line_end":1171,"column_start":25,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":71756,"byte_end":71761,"line_start":1215,"line_end":1215,"column_start":34,"column_end":39},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72055,"byte_end":72060,"line_start":1225,"line_end":1225,"column_start":35,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72358,"byte_end":72365,"line_start":1235,"line_end":1235,"column_start":36,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":534},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72549,"byte_end":72556,"line_start":1241,"line_end":1241,"column_start":37,"column_end":44},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":534},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72720,"byte_end":72727,"line_start":1247,"line_end":1247,"column_start":36,"column_end":43},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":72911,"byte_end":72918,"line_start":1253,"line_end":1253,"column_start":37,"column_end":44},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":0,"index":242}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76664,"byte_end":76675,"line_start":1375,"line_end":1375,"column_start":6,"column_end":17},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":76893,"byte_end":76904,"line_start":1385,"line_end":1385,"column_start":6,"column_end":17},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77144,"byte_end":77153,"line_start":1395,"line_end":1395,"column_start":28,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77260,"byte_end":77269,"line_start":1401,"line_end":1401,"column_start":28,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":77367,"byte_end":77376,"line_start":1407,"line_end":1407,"column_start":19,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":78568,"byte_end":78579,"line_start":1436,"line_end":1436,"column_start":19,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":79644,"byte_end":79655,"line_start":1465,"line_end":1465,"column_start":19,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80725,"byte_end":80734,"line_start":1494,"line_end":1494,"column_start":24,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":596},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80761,"byte_end":80772,"line_start":1495,"line_end":1495,"column_start":24,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\ipnet.rs","byte_start":80799,"byte_end":80810,"line_start":1496,"line_end":1496,"column_start":24,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":657},"to":{"krate":2,"index":3867}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":88401,"byte_end":88407,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97335,"byte_end":97340,"line_start":295,"line_end":295,"column_start":18,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":508},"to":{"krate":2,"index":6664}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97610,"byte_end":97617,"line_start":305,"line_end":305,"column_start":18,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":6664}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":97891,"byte_end":97898,"line_start":315,"line_end":315,"column_start":18,"column_end":25},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":6664}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":98661,"byte_end":98675,"line_start":339,"line_end":339,"column_start":23,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":690},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ipnet-2.3.0\\src\\parser.rs","byte_start":98805,"byte_end":98819,"line_start":345,"line_end":345,"column_start":16,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":690},"to":{"krate":1,"index":1623}}]}