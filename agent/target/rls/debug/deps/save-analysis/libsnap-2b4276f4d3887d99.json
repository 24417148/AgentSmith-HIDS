{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5","program":"C:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","snap","C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=2b4276f4d3887d99","-C","extra-filename=-2b4276f4d3887d99","--out-dir","e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","-L","dependency=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","--extern","byteorder=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\libbyteorder-66ee3c2aaa1a40ee.rmeta","--extern","lazy_static=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\liblazy_static-f183ae51638d88e0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\danie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\libsnap-2b4276f4d3887d99.rmeta"},"prelude":{"crate_id":{"name":"snap","disambiguator":[17607312331052700998,2126780344597396758]},"crate_root":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src","external_crates":[{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":14,"id":{"name":"byteorder","disambiguator":[14365959273093988939,3842107810523594085]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","num":15,"id":{"name":"lazy_static","disambiguator":[11183393041770989563,4958224602867445297]}}],"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":0,"byte_end":3488,"line_start":1,"line_end":118,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":2928,"byte_end":2935,"line_start":98,"line_end":98,"column_start":20,"column_end":27},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":2937,"byte_end":2953,"line_start":98,"line_end":98,"column_start":29,"column_end":45},"alias_span":null,"name":"max_compress_len","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":2977,"byte_end":2984,"line_start":99,"line_end":99,"column_start":22,"column_end":29},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":2986,"byte_end":3000,"line_start":99,"line_end":99,"column_start":31,"column_end":45},"alias_span":null,"name":"decompress_len","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":3019,"byte_end":3024,"line_start":100,"line_end":100,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":3026,"byte_end":3040,"line_start":100,"line_end":100,"column_start":24,"column_end":38},"alias_span":null,"name":"IntoInnerError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":3042,"byte_end":3048,"line_start":100,"line_end":100,"column_start":40,"column_end":46},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":3067,"byte_end":3073,"line_start":101,"line_end":101,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":3075,"byte_end":3081,"line_start":101,"line_end":101,"column_start":25,"column_end":31},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":0,"byte_end":3488,"line_start":1,"line_end":118,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":110},{"krate":0,"index":124},{"krate":0,"index":172},{"krate":0,"index":214},{"krate":0,"index":289},{"krate":0,"index":292}],"decl_id":null,"docs":"This crate provides an implementation of the\n[Snappy compression format](https://github.com/google/snappy/blob/master/format_description.txt),\nas well as the\n[framing format](https://github.com/google/snappy/blob/master/framing_format.txt).\nThe goal of Snappy is to provide reasonable compression at high speed. On a\nmodern CPU, Snappy can compress data at about 300 MB/sec or more and can\ndecompress data at about 800 MB/sec or more.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\lib.rs","byte_start":2691,"byte_end":2713,"line_start":86,"line_end":86,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":4971,"byte_end":4987,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"max_compress_len","qualname":"::compress::max_compress_len","value":"fn (input_len: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum compressed size given the uncompressed size.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":5675,"byte_end":5682,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::compress::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":" Encoder is a raw encoder for compressing bytes in the Snappy format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":5838,"byte_end":5841,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"fn () -> Encoder","parent":null,"children":[],"decl_id":null,"docs":" Return a new encoder that can be used for compressing bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":6581,"byte_end":6589,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"compress","qualname":"<Encoder>::compress","value":"fn (&mut self, mut input: &[u8], output: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compresses all bytes in `input` into `output`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":8876,"byte_end":8888,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"compress_vec","qualname":"<Encoder>::compress_vec","value":"fn (&mut self, input: &[u8]) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses all bytes in `input` into a freshly allocated `Vec`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":31972,"byte_end":31986,"line_start":32,"line_end":32,"column_start":8,"column_end":22},"name":"decompress_len","qualname":"::decompress::decompress_len","value":"fn (input: &[u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the decompressed size (in bytes) of the compressed bytes given.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":32525,"byte_end":32532,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decompress::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":" Decoder is a raw decoder for decompressing bytes in the Snappy format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":32700,"byte_end":32703,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn () -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Return a new decoder that can be used for decompressing bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":33502,"byte_end":33512,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"decompress","qualname":"<Decoder>::decompress","value":"fn (&mut self, input: &[u8], output: &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses all bytes in `input` into `output`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":34570,"byte_end":34584,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"decompress_vec","qualname":"<Decoder>::decompress_vec","value":"fn (&mut self, input: &[u8]) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses all bytes in `input` into a freshly allocated `Vec`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":50522,"byte_end":50528,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A convenient type alias for `Result<T, snap::Error>`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":50875,"byte_end":50889,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"IntoInnerError","qualname":"::error::IntoInnerError","value":"IntoInnerError {  }","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"decl_id":null,"docs":" `IntoInnerError` occurs when consuming a `Writer` fails.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51378,"byte_end":51383,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"error","qualname":"<IntoInnerError<W>>::error","value":"fn (&self) -> &io::Error","parent":null,"children":[],"decl_id":null,"docs":" Returns the error which caused the call to `into_inner` to fail.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51617,"byte_end":51627,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<IntoInnerError<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying writer which generated the error.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":52788,"byte_end":52794,"line_start":81,"line_end":81,"column_start":5,"column_end":11},"name":"TooBig","qualname":"::error::Error::TooBig","value":"Error::TooBig { given, max }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when the given input is too big. This can happen\n during compression or decompression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":53113,"byte_end":53127,"line_start":90,"line_end":90,"column_start":5,"column_end":19},"name":"BufferTooSmall","qualname":"::error::Error::BufferTooSmall","value":"Error::BufferTooSmall { given, min }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when the given buffer is too small to contain the\n maximum possible compressed bytes or the total number of decompressed\n bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":354},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":53353,"byte_end":53358,"line_start":97,"line_end":97,"column_start":5,"column_end":10},"name":"Empty","qualname":"::error::Error::Empty","value":"Error::Empty","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when trying to decompress a zero length buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":356},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":53444,"byte_end":53450,"line_start":99,"line_end":99,"column_start":5,"column_end":11},"name":"Header","qualname":"::error::Error::Header","value":"Error::Header","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when an invalid header is found during decompression.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":53763,"byte_end":53777,"line_start":105,"line_end":105,"column_start":5,"column_end":19},"name":"HeaderMismatch","qualname":"::error::Error::HeaderMismatch","value":"Error::HeaderMismatch { expected_len, got_len }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when there is a mismatch between the number of\n decompressed bytes reported in the header and the number of\n actual decompressed bytes. In this error case, the number of actual\n decompressed bytes is always less than the number reported in the\n header.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":54096,"byte_end":54103,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Literal","qualname":"::error::Error::Literal","value":"Error::Literal { len, src_len, dst_len }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n reading a literal.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":54461,"byte_end":54469,"line_start":124,"line_end":124,"column_start":5,"column_end":13},"name":"CopyRead","qualname":"::error::Error::CopyRead","value":"Error::CopyRead { len, src_len }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n reading a copy.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":54808,"byte_end":54817,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"name":"CopyWrite","qualname":"::error::Error::CopyWrite","value":"Error::CopyWrite { len, dst_len }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs during decompression when there was a problem\n writing a copy to the decompression buffer.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":55235,"byte_end":55241,"line_start":142,"line_end":142,"column_start":5,"column_end":11},"name":"Offset","qualname":"::error::Error::Offset","value":"Error::Offset { offset, dst_pos }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs during decompression when an invalid copy offset\n is found. An offset is invalid if it is zero or if it is out of bounds.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":55677,"byte_end":55689,"line_start":152,"line_end":152,"column_start":5,"column_end":17},"name":"StreamHeader","qualname":"::error::Error::StreamHeader","value":"Error::StreamHeader { byte }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when a stream header chunk type was expected but got\n a different chunk type.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":55946,"byte_end":55966,"line_start":159,"line_end":159,"column_start":5,"column_end":25},"name":"StreamHeaderMismatch","qualname":"::error::Error::StreamHeaderMismatch","value":"Error::StreamHeaderMismatch { bytes }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when the magic stream headers bytes do not match\n what is expected.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":56185,"byte_end":56205,"line_start":165,"line_end":165,"column_start":5,"column_end":25},"name":"UnsupportedChunkType","qualname":"::error::Error::UnsupportedChunkType","value":"Error::UnsupportedChunkType { byte }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when an unsupported chunk type is seen.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":56533,"byte_end":56555,"line_start":173,"line_end":173,"column_start":5,"column_end":27},"name":"UnsupportedChunkLength","qualname":"::error::Error::UnsupportedChunkLength","value":"Error::UnsupportedChunkLength { len, header }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when trying to read a chunk with length greater than\n that supported by this library when reading a Snappy frame formatted\n stream.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":56873,"byte_end":56881,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Checksum","qualname":"::error::Error::Checksum","value":"Error::Checksum { expected, got }","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" This error occurs when a checksum validity check fails.\n This error only occurs when reading a Snappy frame formatted stream.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":347},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":52656,"byte_end":52661,"line_start":78,"line_end":78,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{TooBig, BufferTooSmall, Empty, Header, HeaderMismatch, Literal, CopyRead, CopyWrite, Offset, StreamHeader, StreamHeaderMismatch, UnsupportedChunkType, UnsupportedChunkLength, Checksum}","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":383}],"decl_id":null,"docs":" Error describes all the possible errors that may occur during Snappy\n compression or decompression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":66759,"byte_end":66765,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"Writer","qualname":"::frame::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"decl_id":null,"docs":" A writer for compressing a Snappy stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":68102,"byte_end":68105,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"fn (wtr: W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer for streaming Snappy compression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":68706,"byte_end":68716,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"fn (mut self) -> Result<W, IntoInnerError<Writer<W>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying stream, consuming and flushing this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":69011,"byte_end":69018,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer in this encoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":73248,"byte_end":73254,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"Reader","qualname":"::frame::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"decl_id":null,"docs":" A reader for decompressing a Snappy stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":74035,"byte_end":74038,"line_start":253,"line_end":253,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (rdr: R) -> Reader<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new reader for streaming Snappy decompression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":74401,"byte_end":74408,"line_start":266,"line_end":266,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<R>>::get_ref","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader in this decoder.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":5748,"byte_end":5755,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":9252,"byte_end":9257,"line_start":176,"line_end":176,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":23416,"byte_end":23423,"line_start":490,"line_end":490,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":24753,"byte_end":24763,"line_start":525,"line_end":525,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":24918,"byte_end":24928,"line_start":532,"line_end":532,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":25030,"byte_end":25040,"line_start":537,"line_end":537,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":32608,"byte_end":32615,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":35199,"byte_end":35209,"line_start":130,"line_end":130,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":45371,"byte_end":45377,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":47209,"byte_end":47223,"line_start":403,"line_end":403,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":47604,"byte_end":47612,"line_start":418,"line_end":418,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51188,"byte_end":51202,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51709,"byte_end":51723,"line_start":46,"line_end":46,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51909,"byte_end":51923,"line_start":56,"line_end":56,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":52044,"byte_end":52058,"line_start":62,"line_end":62,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57051,"byte_end":57056,"line_start":189,"line_end":189,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57169,"byte_end":57174,"line_start":195,"line_end":195,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57326,"byte_end":57331,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":59761,"byte_end":59766,"line_start":257,"line_end":257,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":61458,"byte_end":61463,"line_start":295,"line_end":295,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":65708,"byte_end":65717,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":68017,"byte_end":68023,"line_start":93,"line_end":93,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":69107,"byte_end":69113,"line_start":125,"line_end":125,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":69381,"byte_end":69387,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":70949,"byte_end":70954,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":73948,"byte_end":73954,"line_start":251,"line_end":251,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":74472,"byte_end":74478,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":5748,"byte_end":5755,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":9252,"byte_end":9257,"line_start":176,"line_end":176,"column_start":14,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":23416,"byte_end":23423,"line_start":490,"line_end":490,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":24753,"byte_end":24763,"line_start":525,"line_end":525,"column_start":10,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":90},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":24918,"byte_end":24928,"line_start":532,"line_end":532,"column_start":20,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":1703}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\compress.rs","byte_start":25030,"byte_end":25040,"line_start":537,"line_end":537,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":90},"to":{"krate":2,"index":1714}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":32608,"byte_end":32615,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":35199,"byte_end":35209,"line_start":130,"line_end":130,"column_start":14,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":45371,"byte_end":45377,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":47209,"byte_end":47223,"line_start":403,"line_end":403,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\decompress.rs","byte_start":47604,"byte_end":47612,"line_start":418,"line_end":418,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51188,"byte_end":51202,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51709,"byte_end":51723,"line_start":46,"line_end":46,"column_start":43,"column_end":57},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":179},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":51909,"byte_end":51923,"line_start":56,"line_end":56,"column_start":26,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":179},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":52044,"byte_end":52058,"line_start":62,"line_end":62,"column_start":24,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":179},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57051,"byte_end":57056,"line_start":189,"line_end":189,"column_start":26,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":2474},"to":{"krate":2,"index":2221}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57169,"byte_end":57174,"line_start":195,"line_end":195,"column_start":13,"column_end":18},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":2044}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":57326,"byte_end":57331,"line_start":199,"line_end":199,"column_start":20,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":2039}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":59761,"byte_end":59766,"line_start":257,"line_end":257,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":347},"to":{"krate":1,"index":1623}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\error.rs","byte_start":61458,"byte_end":61463,"line_start":295,"line_end":295,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":347},"to":{"krate":2,"index":7491}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":65708,"byte_end":65717,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":68017,"byte_end":68023,"line_start":93,"line_end":93,"column_start":16,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":69107,"byte_end":69113,"line_start":125,"line_end":125,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":240},"to":{"krate":2,"index":1725}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":69381,"byte_end":69387,"line_start":135,"line_end":135,"column_start":26,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":240},"to":{"krate":1,"index":2902}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":70949,"byte_end":70954,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":73948,"byte_end":73954,"line_start":251,"line_end":251,"column_start":15,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\snap-0.2.5\\src\\frame.rs","byte_start":74472,"byte_end":74478,"line_start":271,"line_end":271,"column_start":24,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":268},"to":{"krate":1,"index":2848}}]}