{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2","program":"C:\\Users\\danie\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","iprange","C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=e028158e6daa9fe3","-C","extra-filename=-e028158e6daa9fe3","--out-dir","e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","-L","dependency=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps","--extern","ipnet=e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\libipnet-b73e5bfa319b7e0e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\danie\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Development\\AgentSmith-HIDS\\agent\\target\\rls\\debug\\deps\\libiprange-e028158e6daa9fe3.rmeta"},"prelude":{"crate_id":{"name":"iprange","disambiguator":[10874149155444991003,12260099698363357466]},"crate_root":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src","external_crates":[{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[12578048494495979596,2047601184299498072]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[9458200224090790355,13573932773036415113]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17212932621614837670,6562776948220383497]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[760535750034822653,11118367618612043106]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9863315158332858256,17125058067034963864]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4687805557387852666,9943473115938981341]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11895006708321731812,14562333644307237348]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3795917533932740915,1352930594861700352]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[14246119625412523820,1488400038702589601]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[301469929213911528,4015090225475952437]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2057170103176572375,2047842178592089941]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[5373388065014169986,7291481803049279744]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11217907578908536000,17992819105755382748]}},{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","num":14,"id":{"name":"ipnet","disambiguator":[17581924178574724146,9114738294543645748]}}],"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":0,"byte_end":54205,"line_start":1,"line_end":1712,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":0,"byte_end":54205,"line_start":1,"line_end":1712,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":162},{"krate":0,"index":173},{"krate":0,"index":169},{"krate":0,"index":166},{"krate":0,"index":23},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":176},{"krate":0,"index":193},{"krate":0,"index":190},{"krate":0,"index":186},{"krate":0,"index":183},{"krate":0,"index":180},{"krate":0,"index":78},{"krate":0,"index":196},{"krate":0,"index":207},{"krate":0,"index":205},{"krate":0,"index":202},{"krate":0,"index":199},{"krate":0,"index":85},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":156},{"krate":0,"index":159}],"decl_id":null,"docs":" `iprange` is a library for managing IP ranges.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":2503,"byte_end":2510,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"IpRange","qualname":"::IpRange","value":"IpRange {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"decl_id":null,"docs":" A set of networks that supports various operations:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":2706,"byte_end":2709,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<IpRange<N>>::new","value":"fn () -> IpRange<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `IpRange`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":3723,"byte_end":3726,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"add","qualname":"<IpRange<N>>::add","value":"fn (&mut self, network: N) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a network to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":4638,"byte_end":4644,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"remove","qualname":"<IpRange<N>>::remove","value":"fn (&mut self, network: N) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove a network from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":5585,"byte_end":5593,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"simplify","qualname":"<IpRange<N>>::simplify","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Simplify `self` by combining networks. For example:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":5817,"byte_end":5822,"line_start":196,"line_end":196,"column_start":12,"column_end":17},"name":"merge","qualname":"<IpRange<N>>::merge","value":"fn (&self, other: &IpRange<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `IpRange` which contains all networks\n that is either in `self` or in `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":6096,"byte_end":6105,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"intersect","qualname":"<IpRange<N>>::intersect","value":"fn (&self, other: &IpRange<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `IpRange` which contains all networks\n that is in both `self` and `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":6524,"byte_end":6531,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"exclude","qualname":"<IpRange<N>>::exclude","value":"fn (&self, other: &IpRange<N>) -> IpRange<N>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `IpRange` which contains all networks\n that is in `self` while not in `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":6871,"byte_end":6879,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"contains","qualname":"<IpRange<N>>::contains","value":"fn <T> (&self, network: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if `self` contains `network`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7151,"byte_end":7159,"line_start":233,"line_end":233,"column_start":12,"column_end":20},"name":"supernet","qualname":"<IpRange<N>>::supernet","value":"fn <T> (&self, network: &T) -> Option<N>","parent":null,"children":[],"decl_id":null,"docs":" Returns the network in `self` which is the supernetwork of `network`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7318,"byte_end":7322,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"iter","qualname":"<IpRange<N>>::iter","value":"fn (&self) -> IpRangeIter<N>","parent":null,"children":[],"decl_id":null,"docs":" Returns the iterator to `&self`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8403,"byte_end":8408,"line_start":284,"line_end":284,"column_start":11,"column_end":16},"name":"IpNet","qualname":"::IpNet","value":"IpNet: ToNetwork<Self> + fmt::Debug + Ord + Copy","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" An abstraction for IP networks.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8524,"byte_end":8525,"line_start":289,"line_end":289,"column_start":10,"column_end":11},"name":"S","qualname":"::IpNet::S","value":"type S: TraverseState<Net = Self>;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Used for internal traversing.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8624,"byte_end":8625,"line_start":291,"line_end":291,"column_start":10,"column_end":11},"name":"I","qualname":"::IpNet::I","value":"type I: Iterator<Item = bool>;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":"`I` is an iterator to the prefix bits of the network.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8722,"byte_end":8733,"line_start":294,"line_end":294,"column_start":8,"column_end":19},"name":"prefix_bits","qualname":"::IpNet::prefix_bits","value":"fn (&self) -> Self::I","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Returns the iterator to the prefix bits of the network.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8796,"byte_end":8806,"line_start":297,"line_end":297,"column_start":8,"column_end":18},"name":"prefix_len","qualname":"::IpNet::prefix_len","value":"fn (&self) -> u8","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Returns the prefix length.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8915,"byte_end":8930,"line_start":300,"line_end":300,"column_start":8,"column_end":23},"name":"with_new_prefix","qualname":"::IpNet::with_new_prefix","value":"fn (&self, len: u8) -> Self","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Returns a copy of the network with the address truncated to the given length.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9129,"byte_end":9138,"line_start":308,"line_end":308,"column_start":11,"column_end":20},"name":"ToNetwork","qualname":"::ToNetwork","value":"ToNetwork<N: IpNet>","parent":null,"children":[{"krate":0,"index":60}],"decl_id":null,"docs":" Anything that can be converted to `IpNet`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9158,"byte_end":9168,"line_start":309,"line_end":309,"column_start":8,"column_end":18},"name":"to_network","qualname":"::ToNetwork::to_network","value":"fn (&self) -> N","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9370,"byte_end":9381,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"IpRangeIter","qualname":"::IpRangeIter","value":"IpRangeIter {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" An iterator over the networks in an [`IpRange`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9523,"byte_end":9536,"line_start":327,"line_end":327,"column_start":11,"column_end":24},"name":"TraverseState","qualname":"::TraverseState","value":"TraverseState","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" Used for internal traversing.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9548,"byte_end":9551,"line_start":328,"line_end":328,"column_start":10,"column_end":13},"name":"Net","qualname":"::TraverseState::Net","value":"type Net: IpNet;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9568,"byte_end":9572,"line_start":330,"line_end":330,"column_start":8,"column_end":12},"name":"node","qualname":"::TraverseState::node","value":"fn (&self) -> &IpTrieNode","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9604,"byte_end":9608,"line_start":332,"line_end":332,"column_start":8,"column_end":12},"name":"init","qualname":"::TraverseState::init","value":"fn (root: &IpTrieNode) -> Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9645,"byte_end":9652,"line_start":334,"line_end":334,"column_start":8,"column_end":15},"name":"transit","qualname":"::TraverseState::transit","value":"fn (&self, next_node: &IpTrieNode, current_bit: bool) -> Self","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9720,"byte_end":9725,"line_start":336,"line_end":336,"column_start":8,"column_end":13},"name":"build","qualname":"::TraverseState::build","value":"fn (&self) -> Self::Net","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":13967,"byte_end":13977,"line_start":490,"line_end":490,"column_start":12,"column_end":22},"name":"IpTrieNode","qualname":"::IpTrieNode","value":"IpTrieNode {  }","parent":null,"children":[{"krate":0,"index":197}],"decl_id":null,"docs":" Node of the inner radix trie.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":18486,"byte_end":18503,"line_start":649,"line_end":649,"column_start":12,"column_end":29},"name":"Ipv4TraverseState","qualname":"::Ipv4TraverseState","value":"Ipv4TraverseState {  }","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":19412,"byte_end":19433,"line_start":692,"line_end":692,"column_start":12,"column_end":33},"name":"Ipv4PrefixBitIterator","qualname":"::Ipv4PrefixBitIterator","value":"Ipv4PrefixBitIterator {  }","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":21040,"byte_end":21057,"line_start":771,"line_end":771,"column_start":12,"column_end":29},"name":"Ipv6TraverseState","qualname":"::Ipv6TraverseState","value":"Ipv6TraverseState {  }","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":21968,"byte_end":21989,"line_start":814,"line_end":814,"column_start":12,"column_end":33},"name":"Ipv6PrefixBitIterator","qualname":"::Ipv6PrefixBitIterator","value":"Ipv6PrefixBitIterator {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":2646,"byte_end":2653,"line_start":96,"line_end":96,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7404,"byte_end":7411,"line_start":243,"line_end":243,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7546,"byte_end":7553,"line_start":252,"line_end":252,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9771,"byte_end":9782,"line_start":339,"line_end":339,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":10491,"byte_end":10498,"line_start":364,"line_end":364,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":10969,"byte_end":10975,"line_start":390,"line_end":390,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":14032,"byte_end":14042,"line_start":494,"line_end":494,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":17422,"byte_end":17429,"line_start":597,"line_end":597,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":17948,"byte_end":17955,"line_start":621,"line_end":621,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":18068,"byte_end":18076,"line_start":628,"line_end":628,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":18598,"byte_end":18615,"line_start":655,"line_end":655,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":19494,"byte_end":19515,"line_start":697,"line_end":697,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":19846,"byte_end":19853,"line_start":713,"line_end":713,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":20346,"byte_end":20353,"line_start":736,"line_end":736,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":20466,"byte_end":20474,"line_start":743,"line_end":743,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":21153,"byte_end":21170,"line_start":777,"line_end":777,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":22051,"byte_end":22072,"line_start":819,"line_end":819,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":2646,"byte_end":2653,"line_start":96,"line_end":96,"column_start":16,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7404,"byte_end":7411,"line_start":243,"line_end":243,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":2204}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":7546,"byte_end":7553,"line_start":252,"line_end":252,"column_start":31,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":7486}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8410,"byte_end":8419,"line_start":284,"line_end":284,"column_start":18,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":58},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8433,"byte_end":8438,"line_start":284,"line_end":284,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":7486},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8441,"byte_end":8444,"line_start":284,"line_end":284,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2065},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":8447,"byte_end":8451,"line_start":284,"line_end":284,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":9771,"byte_end":9782,"line_start":339,"line_end":339,"column_start":22,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":10491,"byte_end":10498,"line_start":364,"line_end":364,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":162},"to":{"krate":2,"index":3804}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":10969,"byte_end":10975,"line_start":390,"line_end":390,"column_start":9,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":14032,"byte_end":14042,"line_start":494,"line_end":494,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":17422,"byte_end":17429,"line_start":597,"line_end":597,"column_start":16,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":14,"index":534},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":17948,"byte_end":17955,"line_start":621,"line_end":621,"column_start":29,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":14,"index":534},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":18068,"byte_end":18076,"line_start":628,"line_end":628,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":1,"index":6548},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":18598,"byte_end":18615,"line_start":655,"line_end":655,"column_start":24,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":112},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":19494,"byte_end":19515,"line_start":697,"line_end":697,"column_start":19,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":122},"to":{"krate":2,"index":3510}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":19846,"byte_end":19853,"line_start":713,"line_end":713,"column_start":16,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":14,"index":560},"to":{"krate":0,"index":52}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":20346,"byte_end":20353,"line_start":736,"line_end":736,"column_start":29,"column_end":36},"kind":{"Impl":{"id":14}},"from":{"krate":14,"index":560},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":20466,"byte_end":20474,"line_start":743,"line_end":743,"column_start":29,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":6551},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":21153,"byte_end":21170,"line_start":777,"line_end":777,"column_start":24,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":146},"to":{"krate":0,"index":64}},{"span":{"file_name":"C:\\Users\\danie\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\iprange-0.6.2\\src\\lib.rs","byte_start":22051,"byte_end":22072,"line_start":819,"line_end":819,"column_start":19,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":156},"to":{"krate":2,"index":3510}}]}